!function(t){var n={};function i(s){if(n[s])return n[s].exports;var e=n[s]={i:s,l:!1,exports:{}};return t[s].call(e.exports,e,e.exports,i),e.l=!0,e.exports}i.m=t,i.c=n,i.d=function(t,n,s){i.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,n){if(1&n&&(t=i(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var e in t)i.d(s,e,function(n){return t[n]}.bind(null,e));return s},i.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(n,"a",n),n},i.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},i.p="",i(i.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./assets/script/_Wave.ts\nclass Wave {\n    constructor() {\n        this.height = window.innerHeight;\n        this.width = window.innerWidth;\n        this.fps = Math.floor(1000 / 25);\n        this.ms = 0;\n        this.originX = 0;\n        this.subsets = [];\n        this.onFocus = false;\n        this.execute = () => {\n            document.querySelector('body').appendChild(this.canvas);\n            this.canvas.className = 'js-no-print';\n            this.canvas.height = this.height;\n            this.canvas.width = this.width;\n            this.canvas.setAttribute('style', 'background-color:hsla(240,100%,12.5%,0.4);position:fixed;z-index:-10000;top:0;left:0;');\n            this.ctx.lineJoin = 'round';\n            this.ctx.lineWidth = 2;\n            this.ctx.save();\n            this.draw();\n            this.interval = setInterval(this.draw, this.fps);\n            this.onFocus = true;\n            window.addEventListener('blur', () => {\n                this.onFocus = false;\n            });\n            window.addEventListener('focus', () => {\n                this.onFocus = true;\n            });\n        };\n        this.draw = () => {\n            if (!this.onFocus) {\n                return;\n            }\n            const drawPath = (t, periodicity = 200) => {\n                const amplitude = 50 + 40 * Math.sin(t / 4);\n                this.ctx.moveTo(this.originX, this.originY + Math.sin(t) * amplitude);\n                let i = this.originX;\n                let x;\n                let y;\n                for (; i <= this.width; i += 20) {\n                    x = t + (i - this.originX) / periodicity;\n                    y = Math.sin(x);\n                    this.ctx.lineTo(i, this.originY + y * amplitude);\n                }\n                this.ctx.lineTo(i, this.height);\n                this.ctx.lineTo(this.originX, this.height);\n            };\n            this.ms += this.fps;\n            this.ctx.clearRect(0, 0, this.width, this.height);\n            this.ctx.save();\n            this.ctx.strokeStyle = 'hsla(251,72.6%,24.3%,1)';\n            this.ctx.fillStyle = 'hsla(251,72.6%,24.3%,0.4)';\n            this.ctx.beginPath();\n            drawPath((this.ms / this.fps * Math.PI / 90) - this.subsets[0], 541);\n            this.ctx.closePath();\n            this.ctx.fill();\n            this.ctx.restore();\n            this.ctx.save();\n            this.ctx.strokeStyle = 'hsla(334,79.3%,37.8%,1)';\n            this.ctx.fillStyle = 'hsla(334,79.3%,37.8%,0.3)';\n            this.ctx.beginPath();\n            drawPath((this.ms / this.fps * Math.PI / 90) - this.subsets[1], 300);\n            this.ctx.closePath();\n            this.ctx.fill();\n            this.ctx.restore();\n            this.ctx.save();\n            this.ctx.strokeStyle = 'rgba(0,100,255,1)';\n            this.ctx.fillStyle = 'rgba(0,100,255,0.3)';\n            this.ctx.beginPath();\n            drawPath((this.ms / this.fps * Math.PI / 90) - this.subsets[2], 853);\n            this.ctx.closePath();\n            this.ctx.fill();\n            this.ctx.restore();\n        };\n        this.originY = Math.floor(this.height / 2);\n        for (let i = 0; i < 3; ++i) {\n            this.subsets[i] = Math.random() * Math.PI;\n        }\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n    }\n}\n\n// CONCATENATED MODULE: ./assets/script/index.ts\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const wave = new Wave();\n    wave.execute();\n});\n\n\n//# sourceURL=webpack:///./assets/script/index.ts_+_1_modules?")}]);